DROP TABLE IF EXISTS  requests, compilations_events, compilations, events, categories, users;

CREATE TABLE IF NOT EXISTS users (
    email VARCHAR(254) NOT NULL,
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(250) NOT NULL,
    CONSTRAINT unique_user_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS categories (
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    CONSTRAINT unique_category_name UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS events (
    annotation         VARCHAR(2000) NOT NULL,
    category_id        BIGINT NOT NULL,
    confirmed_requests BIGINT,
    created_on         TIMESTAMP NOT NULL,
    description        VARCHAR(7000) NOT NULL,
    event_date         TIMESTAMP NOT NULL,
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    initiator_id       BIGINT NOT NULL,
    lat                FLOAT NOT NULL,
    lon                FLOAT NOT NULL,
    paid               BOOLEAN DEFAULT FALSE,
    participant_limit  INTEGER DEFAULT 0,
    published_on       TIMESTAMP,
    request_moderation BOOLEAN DEFAULT FALSE,
    state              VARCHAR(16) NOT NULL,
    title              VARCHAR(120) NOT NULL,
    CONSTRAINT fk_events_to_users FOREIGN KEY (initiator_id) REFERENCES users (id),
    CONSTRAINT fk_events_to_categories FOREIGN KEY (category_id) REFERENCES categories (id)
);

CREATE TABLE IF NOT EXISTS compilations (
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN DEFAULT FALSE,
    title  VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events (
    compilation_id BIGINT,
    event_id       BIGINT,
    PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT fk_compilations_events_to_compilations FOREIGN KEY (compilation_id) REFERENCES compilations(id),
    CONSTRAINT fk_compilations_events_to_events FOREIGN KEY (event_id) REFERENCES events(id)
);

CREATE TABLE IF NOT EXISTS requests (
    created             TIMESTAMP NOT NULL,
    event_id            BIGINT NOT NULL,
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    requester_id        BIGINT NOT NULL,
    status              VARCHAR(16) NOT NULL,
    CONSTRAINT fk_requests_to_event FOREIGN KEY (event_id) REFERENCES events(id),
    CONSTRAINT fk_requests_to_users FOREIGN KEY (requester_id) REFERENCES users(id)
);

CREATE INDEX idx_events_category_id ON events(category_id);
CREATE INDEX idx_events_initiator_id ON events(initiator_id);
CREATE INDEX idx_events_event_date ON events(event_date);
CREATE INDEX idx_requests_event_id ON requests(event_id);
CREATE INDEX idx_requests_requester_id ON requests(requester_id);